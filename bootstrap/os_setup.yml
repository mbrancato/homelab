---
- name: OS Setup
  hosts: lab
  become: true
  gather_facts: true
  vars:
    ansible_python_interpreter: "/usr/bin/env python"

  tasks:
  - debug:
      var: ansible_default_ipv4

  # Update /etc/hosts before updating the hostname
  - name: Setup the hosts file
    template:
      src: hosts.j2
      dest: /etc/hosts

  - name: Set hostname
    hostname:
      name: '{{ hostname }}'

  - name: Download Proxmox repo key
    get_url:
      url: 'http://download.proxmox.com/debian/proxmox-ve-release-5.x.gpg'
      dest: /etc/apt/trusted.gpg.d/proxmox-ve-release-5.x.gpg
      mode: '0444'

  - name: Add Proxmox package repo
    apt_repository:
      repo: 'deb http://download.proxmox.com/debian/pve stretch pve-no-subscription'
      state: present

  - name: Update Debian
    apt:
      update_cache: yes

  - name: Install required packages
    apt:
      name:
      #- openvswitch-switch
      - zfsutils-linux
      - unattended-upgrades
      - ntp
      - apt-transport-https
      state: present

  - name: Update Debian
    apt:
      update_cache: yes

  - name: Setup networking
    template:
      src: interfaces.j2
      dest: /etc/network/interfaces

  - name: Load the bonding module
    modprobe:
      name: bonding

  - name: Add bonding to load on startup
    lineinfile:
      path: /etc/modules
      state: present
      line: 'bonding'

  - name: Load the bonding module
    modprobe:
      name: '8021q'

  - name: Add bonding to load on startup
    lineinfile:
      path: /etc/modules
      state: present
      line: '8021q'

  - name: Install Proxmox VE
    apt:
      name:
      - proxmox-ve
      - postfix
      - open-iscsi
      # reinstall because proxmox-ve seems to replace it each time
      - ifupdown2
      state: present

  # Disable the paid repo / doesn't work
  - name: Comment out Proxmox Enterprise repo
    replace:
      dest: /etc/apt/sources.list.d/pve-enterprise.list
      regexp: '^deb https://enterprise.proxmox.com/debian/pve stretch pve-enterprise'
      replace: '#deb https://enterprise.proxmox.com/debian/pve stretch pve-enterprise'

  - name: Remove os-prober
    apt:
      name: os-prober
      state: absent

  - name: Check for admin group
    shell: 'grep -q ^group:admin:.*: /etc/pve/user.cfg'
    register: pve_admin_group
    check_mode: no
    ignore_errors: yes

  - name: Add admin group
    shell: pveum groupadd admin -comment "System Administrators"
    when: pve_admin_group.rc != 0

  - name: Check for admin acl
    shell: 'grep ^acl:.*:.*:@admin:Administrator: /etc/pve/user.cfg'
    register: pve_admin_acl
    check_mode: no
    ignore_errors: yes

  - name: Assign role to group
    shell: 'pveum aclmod / -group admin -role Administrator'
    when: pve_admin_acl.rc != 0

  - name: Check for debian user
    shell: 'grep -q ^user:debian@pam: /etc/pve/user.cfg'
    register: pve_debian_user
    check_mode: no
    ignore_errors: yes

  - name: Add debian user
    shell: 'pveum useradd debian@pam'
    when: pve_debian_user.rc != 0

  - name: Check for debian user as admin member
    shell: 'grep -q ^group:admin:.*debian@pam.*: /etc/pve/user.cfg'
    register: pve_debian_admin_member
    check_mode: no
    ignore_errors: yes

  - name: Add debian user to admin group
    shell: 'pveum usermod debian@pam -group admin'
    when: pve_debian_admin_member.rc != 0

  - name: Install Ceph packages
    shell: yes | pveceph install

- name: Setup first cluster node
  hosts: lab[0]
  become: true
  gather_facts: false
  vars:
    ansible_python_interpreter: "/usr/bin/env python"

  tasks:
  - name: Check for existing cluster
    stat:
      path: /etc/pve/corosync.conf
    register: cluster_config

  - name: Create Proxmox cluster
    shell: pvecm create {{ pve_cluster_name }} -bindnet0_addr {{ cluster_address }} -ring0_addr {{ hostname }}-pve
    when: cluster_config.stat.exists == false

  - name: Initalize Ceph
    shell: 'pveceph init --network {{ storage_network }}'
    when: cluster_config.stat.exists == false

- name: Install Filebeat
  hosts: loggers
  become: true
  gather_facts: true
  vars:
    ansible_python_interpreter: "/usr/bin/env python"

  tasks:
  - name: Fetch Elastic apt repo key
    apt_key:
      id: D88E42B4
      url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
      state: present

  - name: Add Elastic apt repo
    apt_repository:
      repo: deb https://artifacts.elastic.co/packages/7.x/apt stable main
      state: present

  - name: Update Debian
    apt:
      update_cache: yes

  - name: Install Filebeat
    apt:
      name:
      - filebeat
      state: present

  - name: Setup filebeat
    template:
      src: filebeat.yml.j2
      dest: /etc/hosts
      mode: '0644'

  - name: Copy rsyslog filebeat config
    copy:
      src: filebeat-localhost.conf
      dest: /etc/rsyslog.d/
      mode: '0644'

  - name: Restart filebeat
    systemd:
      state: restarted
      name: filebeat.service

  - name: Restart rsyslog
    systemd:
      state: restarted
      name: rsyslog.service
