---
# Source: node-problem-detector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-problem-detector
  labels:
    app.kubernetes.io/name: node-problem-detector
    helm.sh/chart: node-problem-detector-1.7.6
    app.kubernetes.io/instance: node-problem-detector
    app.kubernetes.io/managed-by: Helm
---
# Source: node-problem-detector/templates/custom-config-configmap.yaml
apiVersion: v1
data:
  {}
kind: ConfigMap
metadata:
  name: node-problem-detector-custom-config
  labels:
    app.kubernetes.io/name: node-problem-detector
    helm.sh/chart: node-problem-detector-1.7.6
    app.kubernetes.io/instance: node-problem-detector
    app.kubernetes.io/managed-by: Helm
---
# Source: node-problem-detector/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: node-problem-detector
  labels:
    app.kubernetes.io/name: node-problem-detector
    helm.sh/chart: node-problem-detector-1.7.6
    app.kubernetes.io/instance: node-problem-detector
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
---
# Source: node-problem-detector/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: node-problem-detector
  labels:
    app.kubernetes.io/name: node-problem-detector
    helm.sh/chart: node-problem-detector-1.7.6
    app.kubernetes.io/instance: node-problem-detector
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: node-problem-detector
  namespace: default
roleRef:
  kind: ClusterRole
  name: node-problem-detector
  apiGroup: rbac.authorization.k8s.io
---
# Source: node-problem-detector/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-problem-detector
  labels:
    app.kubernetes.io/name: node-problem-detector
    helm.sh/chart: node-problem-detector-1.7.6
    app.kubernetes.io/instance: node-problem-detector
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-problem-detector
      app.kubernetes.io/instance: node-problem-detector
      app: node-problem-detector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-problem-detector
        app.kubernetes.io/instance: node-problem-detector
        app: node-problem-detector
      annotations:
        checksum/config: 55b90f828d55bbd451cf2076421f1dbd9603e75a8fe7469d30b6e34b0ad9476d
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: node-problem-detector
      hostNetwork: false
      terminationGracePeriodSeconds: 30
      containers:
        - name: node-problem-detector
          image:  "k8s.gcr.io/node-problem-detector:v0.8.1"
          imagePullPolicy: "IfNotPresent"
          command:
            - "/bin/sh"
            - "-c"
            - "exec /node-problem-detector --logtostderr --config.system-log-monitor=/config/kernel-monitor.json,/config/docker-monitor.json --prometheus-address=0.0.0.0 --prometheus-port=20257 --k8s-exporter-heartbeat-period=5m0s"
          securityContext:
            privileged: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: log
              mountPath: /var/log/
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
            - name: custom-config
              mountPath: /custom-config
              readOnly: true
          ports:
            - containerPort: 20257
              name: exporter
          resources:
            {}
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - name: log
          hostPath:
            path: /var/log/
        - name: localtime
          hostPath:
            path: /etc/localtime
            type: "FileOrCreate"
        - name: custom-config
          configMap:
            name: node-problem-detector-custom-config
